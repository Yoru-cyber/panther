name: Release Workflow

on:
  push:
    branches:
      - 'release/*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Required for git describe --tags

      - name: Get version from branch name
        id: version
        run: |
          VERSION=$(echo "${GITHUB_REF#refs/heads/release/v}")
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
      - name: Install git-chglog
        run: |
          curl -sSfL https://raw.githubusercontent.com/git-chglog/git-chglog/master/install.sh | sh -s -- -b $HOME/.local/bin

      - name: Generate Changelog
        run: |
          $HOME/.local/bin/git-chglog > CHANGELOG.md
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          name: Release ${{ steps.version.outputs.VERSION }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false

      - name: Setup Rust Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Build Linux Binary
        run: |
          cargo build --release
          mv target/release/panther panther-linux
      - name: Upload Linux Binary to Release
        run: |
          gh release upload ${{ steps.version.outputs.VERSION }} ./panther-linux --name panther-linux --clobber
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Rust Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Build Windows Binary
        run: |
          cargo build --release --target x86_64-pc-windows-gnu
          mv target/x86_64-pc-windows-gnu/release/panther.exe panther-windows.exe

      - name: Upload Linux Binary to Release
        run: |
          gh release upload ${{ steps.version.outputs.VERSION }} ./panther-windows.exe --name panther-windows.exe --clobber
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    needs: release
